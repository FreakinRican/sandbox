directory cannot exist... maybe later (then check to be sure it isn't HOME)

workspace init =>
   only for new directories

download cache
   ~/.workspace/sources/ruby
       stored by version/patchlevel
   ~/.workspace/sources/rubygems
       stored by version

global config
   hash of download urls for ruby and rubygems
   one is selected from each by default
   ftp://ftp.ruby-lang.org/pub/ruby/1.8/ruby-1.8.6-p287.tar.gz
   ftp://ftp.ruby-lang.org/pub/ruby/1.8/ruby-1.8.6-p287.tar.bz2
   
   # inspiration from deprec, rubygems, bleak_house
   
   DEPREC_TEMPLATES_BASE = File.join(File.dirname(__FILE__), 'templates')
   
   SRC_PACKAGES[:ruby] = {
     :filename => 'ruby-1.8.6-p287.tar.gz',
     :md5sum => "f6cd51001534ced5375339707a757556  ruby-1.8.6-p287.tar.gz",
     :dir => 'ruby-1.8.6-p287',
     :url => "ftp://ftp.ruby-lang.org/pub/ruby/1.8/ruby-1.8.6-p287.tar.gz",
     :unpack => "tar zxf ruby-1.8.6-p287.tar.gz;",
     :configure => %w(
     ./configure
     --with-readline-dir=/usr/local
     ;
     ).reject{|arg| arg.match '#'}.join(' '),
     :make => 'make;',
     :install => 'make install;'
   }
   SRC_PACKAGES[:rubygems] = {
     :filename => 'rubygems-1.3.1.tgz',
     :md5sum => "a04ee6f6897077c5b75f5fd1e134c5a9  rubygems-1.3.1.tgz",
     :dir => 'rubygems-1.3.1',
     :url => "http://rubyforge.org/frs/download.php/45905/rubygems-1.3.1.tgz",
     :unpack => "tar zxf rubygems-1.3.1.tgz;",
     :configure => "",
     :make => "",
     :install => 'ruby setup.rb;'
   }

user config
   ~/.workspace/config
   additional download urls
   change install version choices

get ruby / rubygems
   download from download url in config
   goes into download cache

build ruby and rubygems
   built in /tmp/?
   ruby: --prefix new/workspace/directory
   rubygems: new/workspace/directory/bin/ruby setup.rb
   installed into new/workspace/directory

build only rubygems
   need to set RUBYLIB and GEM_HOME

activate / deactivate script
   2 versions
       a) for ruby/rubygems install (basically sets path)
       b) for rubygems only install (set RUBYLIB, GEM_HOME and PATH)

bin files => (wrappers to ensure env?)
  ruby wrapper
  ri wrapper
  rdoc wrapper
  erb wrapper
  testrb wrapper
  gem wrapper
  

COMMANDS:
  init /path/to/workspace
  list (versions)
  list ruby
  list rubygems
  config.source.ruby add
  config.source.ruby remove
  config.source.ruby default
  config.source.rubygems add
  config.source.rubygems remove
  config.source.rubygems default
  config default.install rubygems
  config default.ruby
  config default.rubygems
  cache
  cache directory
  cache purge
  cache list

Examples: ???
workspace init newworkspacename
workspace ruby --remove -v 1.8.6 -p 86
workspace ruby --add -v 1.8.6 --patchlevel 86 --url





# for creating a rubygems-only workspace (with existing ruby)
WORKSPACE=/path/to/new/workspace
export GEM_HOME=$WORKSPACE/rubygems
export GEM_PATH=$GEM_HOME
export RUBYLIB=$WORKSPACE/lib/rubyinstall/lib
cp ~/.gemrc /tmp/.gemrc.orig
ruby setup.rb --prefix=$WORKSPACE/lib/rubyinstall
cp /tmp/.gemrc ~/.gemrc.orig
ln -s $GEM_HOME/bin $WORKSPACE/bin

cat $WORKSPACE/bin/gem # need to create - could be useful to make sure env is set, but ultimately an issue since there is no way for subsequent commands installed via gems?
$WORKSPACE/lib/rubyinstall/bin/gem --config-file $WORKSPACE/etc/gemrc $*

# Not that important, since the ENV needs setting also
cat $WORKSPACE/rubygems/gemrc # need to create
---
gemhome: $WORKSPACE/rubygems
gempath:
- $WORKSPACE/rubygems

# to activate the rubygems-only workspace
WORKSPACE=/path/to/new/workspace
export GEM_HOME=$WORKSPACE/rubygems
export GEM_PATH=$GEM_HOME
export RUBYLIB=$WORKSPACE/lib/rubyinstall/lib
export PATH=$WORKSPACE/bin:$PATH

